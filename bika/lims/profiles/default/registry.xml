<?xml version="1.0" encoding="UTF-8"?>

<!-- Operation Definitions -->
<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n" i18n:domain="bika">

    <record name="bika.lims.client.default_landing_page">
      <field type="plone.registry.field.Choice">
        <default>analysisrequests</default>
        <description i18n:translate="">Select the default landing page. This is used when a Client user logs into the system, or when a client is selected from the client folder listing.</description>
        <required>True</required>
        <title i18n:translate="">Client Landing Page</title>
          <values>
            <element>analysisrequests</element>
            <element>batches</element>
          </values>
      </field>
    </record>

    <record name="bika.lims.analysisrequest.default_arreport_template">
        <field type="plone.registry.field.Choice">
            <default>default.pt</default>
            <description i18n:translate="">Select the template which will be used, by default, when publishing ARs.</description>
            <required>True</required>
            <title i18n:translate="">Default ARReport Template</title>
            <vocabulary key="vocabulary">bika.lims.vocabularies.ARReportTemplates</vocabulary>
        </field>
    </record>

  <!-- Dates Group start -->
  <!-- plone.app.querystring.field.DateReceived -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.DateReceived">
    <value key="title" i18n:translate="">Date Received</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
    </value>
    <value key="group" i18n:translate="" i18n:domain="plone">Dates</value>
  </records>

  <!-- plone.app.querystring.field.created -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.created">
    <value key="title" i18n:translate="">Date Requested</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
    </value>
    <value key="group" i18n:translate="" i18n:domain="plone">Dates</value>
  </records>

  <!-- .app.querystring.field.DatePublished -->
   <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.DatePublished">
    <value key="title" i18n:translate="">Date Published</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
    </value>
    <value key="group" i18n:translate="" i18n:domain="plone">Dates</value>
  </records>
  
  <!-- .app.querystring.field.DateSampled -->
   <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.DateSampled">
    <value key="title" i18n:translate="">Date Sampled</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
    </value>
    <value key="group" i18n:translate="" i18n:domain="plone">Dates</value>
  </records>
  
  <!-- Dates Group end -->
  
  <!-- Metadata Group start -->

  <!-- plone.app.querystring.field.worksheetanalysis_review_state -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.worksheetanalysis_review_state">
    <value key="title" i18n:translate="" i18n_domain="plone">Worksheet state</value>
    <value key="description" i18n:translate="" i18n_domain="plone">A worksheet's state</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.AnalysisWorkflowStates</value>
    <value key="group" i18n:translate="" i18n_domain="plone">Metadata</value>
  </records>

  <!-- plone.app.querystring.field.cancellation_state -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.cancellation_state">
    <value key="title" i18n:translate="" i18n_domain="plone">Cancellation state</value>
    <value key="description" i18n:translate="" i18n_domain="plone">An item's cancellation state</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.AnalysisWorkflowStates</value>
    <value key="group" i18n:translate="" i18n_domain="plone">Metadata</value>
  </records>

  <!-- Metadata Group end -->

  <!-- plone.app.querystring.field.Client -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.ClientTitle">
    <value key="title" i18n:translate="" i18n_domain="plone">Client</value>
    <value key="description" i18n:translate="" i18n_domain="plone">Client</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.Clients</value>
    <value key="group" i18n:translate="" i18n_domain="plone">Bika-LIMS</value>
  </records>

  <!-- plone.app.querystring.field.AnalysisService -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.AnalysisService">
    <value key="title" i18n:translate="" i18n_domain="plone">Analysis Service</value>
    <value key="description" i18n:translate="" i18n_domain="plone">Analysis Service</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.AnalysisServices</value>
    <value key="group" i18n:translate="" i18n_domain="plone">Bika-LIMS</value>
  </records>

  <!-- plone.app.querystring.field.Analyst -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.Analyst">
    <value key="title" i18n:translate="" i18n_domain="plone">Analyst</value>
    <value key="description" i18n:translate="" i18n_domain="plone">Analyst</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.Analysts</value>
    <value key="group" i18n:translate="" i18n_domain="plone">Bika-LIMS</value>
  </records>

  <!-- plone.app.querystring.field.InstrumentTitle -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.InstrumentTitle">
    <value key="title" i18n:translate="" i18n_domain="plone">Instrument Title</value>
    <value key="description" i18n:translate="" i18n_domain="plone">Instrument Title</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.Instruments</value>
    <value key="group" i18n:translate="" i18n_domain="plone">Bika-LIMS</value>
  </records>

  <!-- plone.app.querystring.field.SamplePointTitle -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.SamplePointTitle">
    <value key="title" i18n:translate="" i18n_domain="plone">Sample Point</value>
    <value key="description" i18n:translate="" i18n_domain="plone">Sample Point</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.SamplePoints</value>
    <value key="group" i18n:translate="" i18n_domain="plone">Bika-LIMS</value>
  </records>
  
  <!-- plone.app.querystring.field.SampleTypeTitle -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="plone.app.querystring.field.SampleTypeTitle">
    <value key="title" i18n:translate="" i18n_domain="plone">Sample Type</value>
    <value key="description" i18n:translate="" i18n_domain="plone">Sample Type</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.SampleTypes</value>
    <value key="group" i18n:translate="" i18n_domain="plone">Bika-LIMS</value>
  </records>

  <!-- To add Period : [Day, Week, Month]  -->
  <!-- To add Output Format  -->
  <!-- To add Group by : [Day, Week, Month, Year] -->
  <!--  created used instead of DateLoaded -->


  

  <!-- Hidden Attributes-->
  <record name="bika.lims.hiddenattributes">
     <field type="plone.registry.field.Tuple">
       <title>Site Hidden Attributes</title>
       <description>One item per class</description>
       <value_type type="plone.registry.field.List">
         <title>Field list</title>
         <description>First row is Class name followed by one Field name per row</description>
         <value_type type="plone.registry.field.TextLine">
           <title>Field Name</title>
         </value_type>
       </value_type>
     </field>
  </record>
</registry>
